package Entity.base;

import java.io.Serializable;


/**
 * This class has been automatically generated by Hibernate Synchronizer.
 * For more information or documentation, visit The Hibernate Synchronizer page
 * at http://www.binamics.com/hibernatesync or contact Joe Hudson at joe@binamics.com.
 *
 * This is an object that contains data related to the Album table.
 * Do not modify this class because it will be overwritten if the configuration file
 * related to this class is modified.
 *
 * @hibernate.class
 *  table="Album"
 */
public abstract class BaseAlbum  implements Serializable {

	public static String PROP_NOM = "Nom";
	public static String PROP_DESCRIPTION = "Description";
	public static String PROP_AUTEUR = "Auteur";
	public static String PROP_DATE = "Date";
	public static String PROP_ID = "ID";


	private int hashCode = Integer.MIN_VALUE;

	// primary key
	private java.lang.Integer _iD;

	// fields
	private java.lang.String _nom;
	private java.lang.String _description;
	private java.lang.Integer _auteur;
	private java.util.Date _date;


	// constructors
	public BaseAlbum () {
		initialize();
	}

	/**
	 * Constructor for primary key
	 */
	public BaseAlbum (java.lang.Integer _iD) {
		this.setID(_iD);
		initialize();
	}

	protected void initialize () {}



	/**
	 * Return the unique identifier of this class
     * @hibernate.id
     *  generator-class="increment"
     *  column="ID"
     */
	public java.lang.Integer getID () {
		return _iD;
	}

	/**
	 * Set the unique identifier of this class
	 * @param _iD the new ID
	 */
	public void setID (java.lang.Integer _iD) {
		this._iD = _iD;
		this.hashCode = Integer.MIN_VALUE;
	}


	/**
	 * Return the value associated with the column: Nom
	 */
	public java.lang.String getNom () {
		return _nom;
	}

	/**
	 * Set the value related to the column: Nom
	 * @param _nom the Nom value
	 */
	public void setNom (java.lang.String _nom) {
		this._nom = _nom;
	}


	/**
	 * Return the value associated with the column: Description
	 */
	public java.lang.String getDescription () {
		return _description;
	}

	/**
	 * Set the value related to the column: Description
	 * @param _description the Description value
	 */
	public void setDescription (java.lang.String _description) {
		this._description = _description;
	}


	/**
	 * Return the value associated with the column: Auteur
	 */
	public java.lang.Integer getAuteur () {
		return _auteur;
	}

	/**
	 * Set the value related to the column: Auteur
	 * @param _auteur the Auteur value
	 */
	public void setAuteur (java.lang.Integer _auteur) {
		this._auteur = _auteur;
	}


	/**
	 * Return the value associated with the column: Date
	 */
	public java.util.Date getDate () {
		return _date;
	}

	/**
	 * Set the value related to the column: Date
	 * @param _date the Date value
	 */
	public void setDate (java.util.Date _date) {
		this._date = _date;
	}


	public boolean equals (Object obj) {
		if (null == obj) return false;
		if (!(obj instanceof Entity.base.BaseAlbum)) return false;
		else {
			Entity.base.BaseAlbum mObj = (Entity.base.BaseAlbum) obj;
			if (null == this.getID() || null == mObj.getID()) return false;
			else return (this.getID().equals(mObj.getID()));
		}
	}


	public int hashCode () {
		if (Integer.MIN_VALUE == this.hashCode) {
			if (null == this.getID()) return super.hashCode();
			else {
				String hashStr = this.getClass().getName() + ":" + this.getID().hashCode();
				this.hashCode = hashStr.hashCode();
			}
		}
		return this.hashCode;
	}


	public String toString () {
		return super.toString();
	}

}