#!/bin/sh
# Maintainer: Kevin Pouget <webalbums-archlinux@0x972.info>

_package=${PKG:-none}

pkgname="webalbums-$_package-git"
pkgrel=0
pkgver=1
arch=('any')
url="https://github.com/wazari972/WebAlbums"
license=('GPL')
md5sums=() #generate with 'makepkg -g'

case ${_package} in
    appserver)
        depends=('jre7-openjdk')
        makedepends=('git')
        
        _description=" -- Tomee Application Appserver"
        _make_target=("prep_appserver")
        ;;
    webapp)
        depends=('imagemagick' 'mariadb') #'webalbums-appserver'
        optdepends=('ffmpeg: for video thumbnails',
                    'totem: for video thumbnails')
        makedepends=('git' 'apache-ant')

        _description=" -- Main application"
        _make_target=('conf_webapp' 'conf_root_path' 'conf_wfs')
        ;;
    wfs)
        depends=() #'webalbums-webapp'
        makedepends=('git' 'gcc' 'fuse' 'jre7-openjdk')

        _description=" -- WebAlbums File-system"
        _make_target=('prep_wfs')
        ;;
    all)
        depends=('imagemagick' 'mariadb' 'jre7-openjdk')
        makedepends=('git' 'gcc' 'fuse' 'jre7-openjdk' 'apache-ant')
        _make_target=('all')
        pkgname="webalbums-git"
        ;;
    *)
        msg "Unknown package to build ($_package), \
please set one: PKG={appserver, webapp, wfs, all} $0."
        exit -1
        ;;
esac



pkgdesc="Free webbased photo manager$_description"

_gitroot=https://github.com/wazari972/WebAlbums
_gitname=webalbums-git
_gitbranch=develop
_localgit=/home/kevin/WebAlbums

build() {
    cd "$srcdir"
    msg "Connecting to git server...."
    
    if [[ -d "$_gitname" ]]; then
        msg "Pulling from git origin repository ..."
        cd "$_gitname" #&& git pull origin
        msg "The local files are updated."
    else
        msg "Cloning git origin repository ..."
        git clone -b "$_gitbranch" "$_gitroot" "$_gitname"
    fi
    
    msg "Git checkout done (or server timeout)"
    msg "Starting build..."
    make -f $srcdir/$_gitname/packaging/Makefile BUILD_DIRNAME=$srcdir/../build/$pkgname ${_make_target[*]}
    msg "Build done"
}

package() {
    msg "Preparing package archive ..."
    cp -r $srcdir/../build/$pkgname/* $pkgdir/
}
