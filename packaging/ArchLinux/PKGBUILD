#!/bin/sh
# Maintainer: Kevin Pouget <webalbums-archlinux@0x972.info>

pkgbase="WebAlbums"
pkgname=("webalbums-appserver-git" "webalbums-webapp-git"
         "webalbums-jfs-git" "webalbums-all-git")
pkgrel=1
pkgver=0.9.3_20150124
arch=('any')
url="https://github.com/wazari972/WebAlbums"
license=('GPL')
md5sums=() #generate with 'makepkg -g'
makedepends=('git' 'apache-ant' 'gcc' 'fuse' 'jre7-openjdk')
pkgdesc_all="Free webbased photo manager"

_depends_appserver=('jre7-openjdk')
_depends_webapp=('imagemagick' 'mariadb') #'webalbums-appserver'
_depends_jfs=() #'webalbums-webapp'
depends=("${_depends_appserver[@]}"
         "${_depends_webapp[@]}"
         "${_depends_jfs[@]}")

_gitroot=https://github.com/wazari972/WebAlbums
_gitname=webalbums-git
_gitbranch=develop
_localgit=/home/kevin/WebAlbums

_makefile=$_gitname/packaging/Makefile

prepare() {
    msg "Connecting to git server..."
    
    if [[ -d "$_gitname" ]]; then
        if [[ ! -s "$_gitname" ]]; then # if it's not our symlink
            msg "Pulling from git origin repository ..."
            cd "$_gitname" && git pull origin
        fi
        msg "The local files are updated."
    elif [[ -d "../../../WebAlbums-ea" ]]; then
        msg "Creating src as a symlink to ../../.."
        ln -s ../../.. "$_gitname"
    else
        msg "Cloning git origin repository ..."
        git clone -b "$_gitbranch" "$_gitroot" "$_gitname"
        msg "Git checkout done (or server timeout)"
    fi
}

pkgver() {
    # git repo is not created yet when pkgver() is called ...
    prepare
    
    cd "$srcdir/$_gitname"

    package=$1 #one of WebAlbums project dir, or empty
    
    # should be in sync with
    # WebAlbums-Service-Beans/build/classes/META-INF/version.properties
    # WebAlbums-Service-Beans/build.xml
    
    case $package in
        "appserver")
            project="apache-tomee-webprofile"
            ;;
        "jfs")
            project="WebAlbums-FS/JnetFS_C"
            ;;
        "webapp")
            project=("WebAlbums-Service-Beans"
                     "WebAlbums-Servlet"
                     "WebAlbums-FS/WebAlbums-FS")
            ;;
        *)
            project="" #use the entire git tree
            version=$(git describe --tags --abbrev=0) # last tag
            since=$version
            ;;
    esac

    if [ -z $version ]; then
        version=$(head -1 VERSION_$package)
        since=$(git log -n 1 --pretty=format:%h -- VERSION_$package)
    fi
    
    cnt=$(git rev-list --count $since..HEAD $project)
    date=$(git log --format="%ai" HEAD^..HEAD $project | cut -d" " -f1 | sed 's/-//g')
    echo $version.${cnt}_$date
}

build() {
    cd "$srcdir"
    
    msg "Starting build..."
    make -f $srcdir/$_makefile build_webapp  
    make -f $srcdir/$_makefile build_jfs
    
    msg "Build done"
}

package() {
    msg "Preparing package $pkgname archive ..."
    #make -f $srcdir/$_makefile BUILD_DIRNAME=$pkgdir $*
    mkdir -p $pkgdir
    touch $pkgdir/test
}

package_webalbums-appserver-git() {
    depends=$_depends_appserver
    pkgdesc="$pkgdesc_all -- Tomee Application Appserver"
    package prep_appserver
    pkgver=$(pkgver appserver)
}

package_webalbums-webapp-git() {
    depends=$_depends_webapp
    pkgdesc="$pkgdesc_all -- Main application"
    optdepends=('ffmpeg: for video thumbnails',
                'totem: for video thumbnails')
    package conf_webapp conf_root_path conf_jfs
    pkgver=$(pkgver webapp)
}

package_webalbums-jfs-git() {
    depends=$_depends_jfs
    pkgdesc="$pkgdesc_all -- Java File-system"
   
    package prep_jfs
    pkgver=$(pkgver jfs)
}

package_webalbums-all-git() {
    package_webalbums-appserver-git
    package_webalbums-webapp-git
    package_webalbums-jfs-git
    
    pkgdesc=$pkgdesc_all
    pkgver=$(pkgver all)
}
