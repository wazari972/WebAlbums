package display;

import java.io.IOException;
import java.util.Iterator;
import java.util.List;
import java.util.NoSuchElementException;

import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import constante.Path;

import display.WebPage.Mode;
import display.WebPage.Type;

import net.sf.hibernate.HibernateException;
import net.sf.hibernate.JDBCException;
import traverse.FilesFinder;
import util.StringUtil;
import Entity.Album;
import Entity.Photo;
import Entity.Tag;
import Entity.Utilisateur;

public class Photos extends HttpServlet {
	private static final long serialVersionUID = 1L;

	public void init() {
		Path.setLocation(this) ;
	}
	
	public void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		
		WebPage.treat(WebPage.Page.PHOTO, request, response) ;
	}
	public void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		doGet(request, response) ;
	}
	
	protected static void treatPHOTO(HttpServletRequest request, StringBuilder output) throws Exception {
		String action = request.getParameter("action") ;
		
		if ("SUBMIT".equals(action) && WebPage.isLoggerAsCurrentAuthor(request, output)) {
			action = treatPhotoSUBMIT(request, output);
			//ensuite afficher la liste *normal* des photos s'il n'y a pas eu de probleme
		}
		
		if ("EDIT".equals(action) && WebPage.isLoggerAsCurrentAuthor(request)) {
			treatPhotoEDIT(request, output);
			
		} else {
			treatPhotoDISPLAY(request, output, action);
		}
	}

	
	protected static String treatPhotoSUBMIT(HttpServletRequest request, StringBuilder output) throws HibernateException, Exception {
		String photoID = StringUtil.escapeHTML(request.getParameter("id")) ;
		String auteur = WebPage.getAuteurID(request) ;
		String rq = null ;
		try {
			rq = "select ph from Album al, Photo ph " +
					"where al.ID = ph.Album " +
					"and al.Auteur = '"+auteur+"' " +
					"and ph.ID = '"+photoID+"'" ;
			List list = WebPage.session.find(rq);
			rq = "done" ;
			
			Photo enrPhoto = (Photo) list.iterator().next() ;
			
			String suppr = request.getParameter("suppr") ;
			if ("Oui je veux supprimer cette photo".equals(suppr)) {
				
				String msg = FilesFinder.deletePhoto (photoID) ;
				output.append("<i>"+msg+"</i><br/>\n");
				return null ;
			}
			
			String desc = StringUtil.escapeHTML(request.getParameter("desc")) ;
			String[] themes = request.getParameterValues("themes");
			
			enrPhoto.setThemes(themes) ;
			
			rq = "from Utilisateur where auteur = '"+auteur+"'" ;
			list = WebPage.session.find(rq);
			rq = "done" ;
			
			String[][] users = new String[list.size()][2] ;
			Iterator it = list.iterator() ;
			
			for (int i = 0; it.hasNext(); i++) {
				Utilisateur user = (Utilisateur) it.next();
				users[i][0] = user.getID().toString() ;
				users[i][1] = StringUtil.escapeHTML(request.getParameter("user"+user.getID())) ;
			}
			enrPhoto.setUsers (users) ;
			enrPhoto.setDescription(desc) ;
			
			return "<b> Photo ("+enrPhoto.getID()+") correctement mise à jour !</b><br/><br/>\n";
		} catch (JDBCException e) {
			output.append("Impossible d'effectuer la modification de la photo ("+photoID+") => "+rq +"<br/>\n"+e+"<br/>\n"+e.getSQLException()+"<br/>\n");
			return "EDIT" ;
		} catch (NoSuchElementException e) {
			output.append("Impossible d'accerder à la photo à modifier ("+photoID+")<br/>"+rq+"<br/>\n");
			return "EDIT" ;
		}
	}	
	
	protected static void treatPhotoDISPLAY(HttpServletRequest request, StringBuilder output, String message) throws HibernateException {
		//afficher les photos
		//afficher la liste des albums de cet auteur
		String album = StringUtil.escapeHTML(request.getParameter("album")) ;
		String page = StringUtil.escapeHTML(request.getParameter("page")) ;
		String from = (String) request.getSession().getAttribute("from") ;
		
		Album enrAlbum = null ;
		String rq = null ;
		try {
			rq = "from Album " +
				 "where id = '"+album+"'" +
				 "and id in ("+WebPage.listAlbumAllowed(request)+")" ;
			
			enrAlbum = (Album) WebPage.session.find(rq).iterator().next();
			rq = "done" ;
			
			output.append("<b>Liste des photos de cet album : </b></br>\n");
			
			rq = "from Photo " +
				 "where album = '"+album+"' " +
				 "and id in ("+WebPage.listPhotoAllowed(request)+")"+
				 "order by path" ;
			
			List list = WebPage.session.find(rq);
			
			String pageGet = "/WebAlbums/servlet/display.Photos?album="+album ;
			if (page != null) pageGet += "&page="+page ;
			displayPhoto(list, output, request, message, pageGet);
			
			output.append("<br/>\n");
			
			output.append("<a href='"+from+"#"+album+"'>Retour aux albums</a>\n");
			
		} catch (NullPointerException e) {
			if (enrAlbum == null) {
				output.append("L'album ("+album+") n'existe pas dans la base/n'est pas accessible...<br/>\n") ;
			} else {
				output.append("Quelque chose n'existe pas ... "+e+"<br/>\n") ;
			}
		} catch (JDBCException e) {
			output.append("Il y a une erreur dans la requete : "+rq+"<br/>\n"+e+"<br/>\n"+e.getSQLException()+"<br/>\n") ;
		}
	}

	protected static void treatPhotoEDIT(HttpServletRequest request, StringBuilder output) throws HibernateException {
		String photoID = StringUtil.escapeHTML(request.getParameter("id")) ;
		String rq = null ;
		try {
			int auteur = Integer.parseInt(WebPage.getAuteurID(request)) ;
			
			rq = "from Photo where id = '"+photoID+"'" ;
			List list = WebPage.session.find(rq);
			rq = "done" ;
			
			Photo enrPhoto = (Photo) list.iterator().next() ;
			
			StringBuilder str = new StringBuilder () ;
			str.append("<b>Modification de photo</b><br/><br/>\n"+
					   	"<form action='/WebAlbums/servlet/display.Photos?action=SUBMIT&album="+enrPhoto.getAlbum()+"&id="+enrPhoto.getID()+"#"+enrPhoto.getID()+"' method='POST'>\n"+
				   	   	"<table>\n"+
				   		"	<tr valign='middle'>\n"+
				   		"		<td rowspan='3'><img alt='"+enrPhoto.getDescription()+"' src='/WebAlbums/servlet/display.Images?id="+enrPhoto.getID()+"&mode=PETIT' /></td>\n"+
				   		"		<td align='right'>Description :</td>\n"+
				   		"		<td colspan='2'><textarea type='text' name='desc'>"+enrPhoto.getDescription()+"</textarea></td>\n"+
				   		"       </tr><tr>\n" +
				   		"		<td></td>"+
				   		"		<td align='right'>Thèmes :</td>\n"+
				   		"		<td rowspan='2' valign='top'>\n");
			WebPage.displayList(Mode.THEME, request, str, enrPhoto.getID(), WebPage.Box.MULTIPLE, Type.PHOTO) ;
			str.append("		</td>\n"+
						"	</tr>\n"+
						"	<tr>\n"+
						"		<td colspan='2'>\n");
			WebPage.displayUserPhoto(auteur, enrPhoto.getAlbum(), enrPhoto.getID(), str);
			str.append("		</td>\n"+
						"	</tr>\n"+
					    "	<tr>\n"+
					    "		<td align='right'>Supprimer ?</td>\n" +
					    "		<td align='left' colspan='3'><input type='text' name='suppr' size='33' maxlength='33'/><br/>\n" +
					    "		\"Oui je veux supprimer cette photo\" </td>\n" +
					    "	</tr>\n"+
						"	<tr>\n"+
						"		<td colspan='5' align='center'><input type='submit' value='Valider' /></td>\n"+
						"	</tr>\n"+
						"<table>\n"+
						"</form>\n"+
						"<br/><br/><a href='/WebAlbums/servlet/display.Photos?album="+enrPhoto.getAlbum()+"#"+enrPhoto.getID()+"'>Retour aux photos</a>\n");
			
			output.append(str.toString());
		} catch (JDBCException e) {
			output.append("Impossible de modifier la photo ("+photoID+") => "+rq+"<br/>\n"+e+"<br/>\n"+e.getSQLException()+"<br/>\n");
		}
	}

	protected static void displayPhoto(List list, StringBuilder output, HttpServletRequest request, String message, String pageGet) throws HibernateException {
		Boolean inEditionMode = WebPage.getEditionMode(request) ;
		String page = request.getParameter("page") ;
		Boolean details = WebPage.getDetails (request) ;
		
		Integer[] bornes = WebPage.calculBornes(Type.PHOTO, page, list.size()) ;
		List portionLst = list.subList(bornes[0], bornes[1]) ;
		
		String id = null ;
		String tag = null ;
		String rq = null ;
		int count = 0 ;
		boolean massEdit = false ;
		boolean reSelect = false ;
		boolean current = false ;
		if (inEditionMode) {
			try {
				String action = request.getParameter("action") ;
				if ("MASSEDIT".equals(action)) {
					tag = StringUtil.escapeHTML(request.getParameter("themes")) ;
					rq = "from Tag where id = '"+tag+"' and auteur = '"+WebPage.getAuteurID(request)+"'" ;
					Tag enrTag = (Tag) WebPage.session.find(rq).iterator().next() ;
					rq = "done" ;
					id = enrTag.getID().toString() ;
					massEdit = true ;
				}
			} catch (JDBCException e) {
				output.append("Impossible d'executer la requete ...=> "+rq+"<br/>\n"+e+"<br/>\n"+e.getSQLException()+"<br/>\n");
			} catch (NoSuchElementException e) {
				output.append("Impossible de trouver ce tag ("+tag+") dans les themes de cet auteur ...<br/>\n");
				reSelect = true ;
			}
			output.append("<form action='"+pageGet+"&action=MASSEDIT' method='POST'>\n");
		}
		
		output.append("<table>\n");
		Photo enrPhoto = null;
		Iterator it = portionLst.iterator();
		while (it.hasNext()) {
			enrPhoto = (Photo) it.next();
			
			String chkbox = request.getParameter("chk"+enrPhoto.getID()) ;
			if ("modif".equals(chkbox)) {
				current = true ;
				if (massEdit) {
					try {
						String[] themes = null ;
						
						themes = new String[1] ;
						themes[0] = id ;
						enrPhoto.addThemes(themes);
						count++ ;
					} catch (Exception e) {
						output.append("Impossible d'effectuer l'action sur cette photo ... "+e+"<br/><br/>\n") ;
					}
				}
			}
			
			output.append("<tr><td colspan='3'><a name='"+enrPhoto.getID()+"'></a></td></tr>\n");
			
			if (message != null && enrPhoto.getID().toString().equals(request.getParameter("id"))) {
				output.append("<tr><td colspan='3'>"+message+"</td></tr>") ;
			}
			output.append("	<tr align='center' valign='middle'>\n");
			if (inEditionMode) {
				output.append("<td><input type='checkbox' name='chk"+enrPhoto.getID()+"' value='modif' "+(reSelect && current ? "checked" : "")+"/></td>\n");
			}
			
			output.append("		<td>\n" +
			"			<a href='/WebAlbums/servlet/display.Images?id="+enrPhoto.getID()+"&mode=GRAND'> <img alt='"+enrPhoto.getDescription()+"' src='/WebAlbums/servlet/display.Images?id="+enrPhoto.getID()+"&mode=PETIT' /></a>\n" +
			"		</td>\n");
			if (details) {
				output.append(
				"		<td align='left' width='50%'><table><tr><td>"+
				enrPhoto.getExif().replace("\n", "</td></tr><tr><td>\n").replace(" - ", "</td><td>")+
				"</td></tr></table></td>\n");
			}
			output.append(
			"		<td width='50%' align='left'>\n" +
			"		<table>\n" +
			"			<tr>\n" +
			"				<td>"+enrPhoto.getDescription()+"</td>\n" +
			"			</tr>\n" +
			"			<tr>\n" +
			"				<td>\n" +
			"					<i>\n");
			WebPage.displayList(Mode.THEME, request, output, enrPhoto.getID(), WebPage.Box.NONE, Type.PHOTO);
			output.append("					</i>\n" +
			"				</td>\n" +
			"			</tr>\n" +
			"			<tr>\n" +
			"				<td>\n");
			if (WebPage.isLoggerAsCurrentAuthor(request)) WebPage.displayList(Mode.USER, request, output, enrPhoto.getID(), WebPage.Box.NONE, Type.PHOTO);
			
			output.append("				</td>\n" +
			"			</tr>\n" +
			"		</table>\n" +
			"		</td>\n");
			if (WebPage.isLoggerAsCurrentAuthor(request) && inEditionMode) output.append("		<td width='5%'><a href=/WebAlbums/servlet/display.Photos?action=EDIT&id="+enrPhoto.getID()+"><img src='/data/web/edit.png' width='25' heigh='25'></a></td>\n");
			output.append("	</tr>\n");
			current = false ;
		}
		output.append("</table>\n");
		
		if (inEditionMode) {
			if (massEdit) output.append("<i>"+count+" photo(s) ont été modifiées</i><br/><br/>\n") ;
			
			output.append("EDITION : Tagger avec");
			WebPage.displayList(WebPage.Mode.THEME, request, output, WebPage.Box.LIST) ;
			output.append("<input type='submit' value='OK'/>\n") ;
			output.append("</form>\n");
		}
		WebPage.displayPages(page, pageGet, bornes, output);
	}
}
