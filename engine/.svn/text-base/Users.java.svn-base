package display;

import java.io.IOException;
import java.util.List;
import java.util.NoSuchElementException;

import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import constante.Path;

import net.sf.hibernate.HibernateException;
import net.sf.hibernate.JDBCException;
import util.StringUtil;
import Entity.Auteur;
import Entity.Utilisateur;

public class Users extends HttpServlet {
	private static final long serialVersionUID = 1L;

	public void init() {
		Path.setLocation(this) ;
	}
	
	public void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
	
		WebPage.treat(WebPage.Page.USR, request, response) ;
	}
	public void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		doGet(request, response) ;
	}
	
	protected static void treatUSR(HttpServletRequest request, StringBuilder output) throws HibernateException {
		String action = request.getParameter("action") ;
		String auteur = WebPage.getAuteurID(request);
		String rq = null ;
		clearUser(request) ;
		try {
			if ("LOGIN".equals(action)) {
				String userName = StringUtil.escapeHTML(request.getParameter("userName")) ;
				
				output.append("<b>WebAlbums de "+WebPage.getAuteurName(request)+"</b><br/><br/>\n");
				boolean asAuteur = (userName != null && userName.equals(WebPage.getAuteurName(request))) ;
				boolean needPass = false ;
				String id = null ;
				
				if (!asAuteur) {
					String str = userName + "@"+request.getRemoteHost()+" -- "+request.getRemoteAddr() ;
					WebPage.stat.warn(str) ;
					
					rq = "from Utilisateur where auteur = '"+auteur+"' and nom = '"+userName+"'" ;
					List list = WebPage.session.find(rq) ;
					rq = "done" ;
					Utilisateur util = (Utilisateur) list.iterator().next() ;
					//s'il n'y a pas besoin de mot de passe
					if (util.getPassword() == null) {
						//on log l'utilisateur en memoire, 
						saveUser(request, util.getID().toString()) ;
						//et on continue vers les choix
						output.append("<i> Acces "+util.getNom()+" </i><br/>\n");
						Choix.treatCHX(request, output) ;
					} else {
						needPass = true ;
						id = util.getID().toString() ;
					}
				} else /*connexion en tant qu'auteur*/{
					needPass = true ;
					rq = "from Auteur where id = '"+auteur+"'" ;
					List list = WebPage.session.find(rq) ;
					rq = "done" ;
					Auteur aut = (Auteur) list.iterator().next() ;
					id = aut.getID().toString();
				}
				
				if (needPass) {
					output.append("<b>Mot de passe requis pour l'utilisateur <b>"+userName+"</b> : </b></br></br>\n"+
							"<form action='/WebAlbums/servlet/display.Users?&action=CONFIRM&userID="+id+"&asAuteur="+asAuteur+"' method='post'>\n" +
							"	<input type='password' name='userPasswd' size='20' maxlength='20'/>\n" +
							"	<input type='submit' value='OK'/>\n" +
							"</form>\n");
				}
			} else if ("CONFIRM".equals(action)) {
				//verification du mot de passe
				String userID = StringUtil.escapeHTML(request.getParameter("userID")) ;
				String passwd = request.getParameter("userPasswd") ;
				//login auteur
				if (Boolean.parseBoolean(request.getParameter("asAuteur"))) {
					rq = "from Auteur where id = '"+userID+"'" ;
					List list = WebPage.session.find(rq) ;
					rq = "done" ;
					Auteur au = (Auteur) list.iterator().next() ;
					
					if (passwd != null && passwd.equals(au.getPassword())) {
						saveUser(request, au.getID().toString()) ;
						output.append("<i>Acces Auteur "+au.getNom()+" </i><br/>\n");
						saveUser(request, WebPage.AUTEUR_CHEAT);
						Choix.treatCHX(request, output) ;
						return ;
					} else {
						output.append("<i>Mot de passe incorrect ... </i><br/>\n");
						action = null ;
					}
				} else /*login utilisateur classique*/{
					rq = "from Utilisateur where auteur = '"+auteur+"' and id = '"+userID+"'" ;
					List list = WebPage.session.find(rq) ;
					rq = "done" ;
					Utilisateur util = (Utilisateur) list.iterator().next() ;
					
					if (passwd != null && passwd.equals(util.getPassword())) {
						saveUser(request, util.getID().toString()) ;
						output.append("<i> Acces protégé "+util.getNom()+" </i><br/>\n");
						Choix.treatCHX(request, output) ;
					} else {
						output.append("<br/><i>Mot de passe incorrect ... </i><br/>\n");
						action = null ;
					}
				}
			} else /*si on est ni en LOGIN ni en CONFIRM, on reaffiche le choix utilisateur*/{
				action = null ;
			}
		} catch (JDBCException e) {
			output.append("<i>Impossible d'effectuer la requete </i>=> "+rq+"<br/>\n"+e+"<br/>\n"+e.getSQLException()+"<br/>\n");
		} catch (NoSuchElementException e) {
			output.append("<i>Cet utilisateur n'existe pas ...  </i><br/>\n");
			action = null ;
		}
		
		if (action == null) {
			//si on ne peut pas sauver l'auteur, on reaffiche le menu auteur
			if (WebPage.tryToSaveAuteur(request, output) == null) {
				WebPage.treatVOID(output) ;
				return ;
			}
			output.append("<b>Nom d'utilisateur : </b></br></br>\n"+
					"<form action='/WebAlbums/servlet/display.Users' method='get'>\n" +
					"	<input type='hidden' name='action' value='LOGIN'/>" +
					"	<input type='input' name='userName' size='20' maxlength='20'/>\n" +
					"	<input type='submit' value='OK'/>\n" +
					"</form>\n");
		}
		
		output.append("<a href='?'>Retour aux auteurs</a>\n");
	}

	protected static void clearUser (HttpServletRequest request) {
		request.getSession().setAttribute("LogInID", null) ;
	}
	
	protected static void saveUser(HttpServletRequest request, String userID) {
		request.getSession().setAttribute("LogInID", userID) ;
		request.getSession().setAttribute("inEditionMode", false) ;
	}
	
	protected static String getUser(HttpServletRequest request) {
		String user = (String) request.getSession().getAttribute("LogInID") ;
		if (user == null) {
			user = StringUtil.escapeHTML(request.getParameter("user"));
		}
		return user ;
	}
}
